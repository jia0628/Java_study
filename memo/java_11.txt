< 에러와 예외 >
- Object를 상속한 Throwable 클래스를 상속하고 있다
- 에러(Error): JVM 자체에서 발생하는 심각한 오류, 개발자가 해결할 수 없는 오류
- 예외(Exception): 상황에 따라 개발자가 해결할 수 있는 오류, ex) 연산 오류, 숫자 포맷 오류, 널포인터 오류 ...

< 예외의 종류 >
- 일반 예외: 컴파일 하기 전에 체크되는 예외
--> ex) ClassNotFoundException, InterruptedException, IOException, FileNotFoundException, CloneNotSupportedException
- 실행 예외: 실행할 때 체크되는 예외
--> RuntimeExcepiton
--> ex) ArithmeticException, ClassCastException, ArrayIndexOutOfBoundsException, NumberFormatException, NullPointerException

< RuntimeExcepiton >
- 프로그램을 실행할 때 발생하는 예외
- 컴파일 전에 발견되지 않음으로 프로그램 실행시에 강제 종료되는 경우가 많음 -> 반드시 예외처리를 해야함


< 예외 처리, Exception Handling >
- 프로그램 실행시에 발생할 수 있는 다양한 예외의 발생에 대비하여 프로그램이 강제 종료되지 않고,
  정상적으로 종료되도록 코드를 작성하는 것


####################################################################3

< 파일의 종류 >
1. 바이트 파일(바이너리): 실행 파일 형태의 모든 파일, ex) exe, jpg, avi, hwp, ppt, pdf ...
2. 문자 파일: txt(메모장)

< FileInputStream, FileOutputStream >
- FileInputStream: 바이트 단위로 입력을 하는 클래스
- FileOutputStream: 바이트 단위로 출력을 하는 클래스

< FileReader, FileWriter >
- FileReader: 문자 단위로 입력을 하는 클래스
- FileWriter: 문자 단위로 출력을 하는 클래스



