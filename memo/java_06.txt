< Object 클래스 >
- 자바의 상속 관계를만들어주는 최상위 클래스
- 자바에서 다른 클래스로부터 상속받지 않은 모든 클래스는 Object 클래스의 자식 클래스
- 다른 클래스로부터 상속받지 않은 클래스는 extends Object가 생략되어 있음.
- java.lang 패키지 속해 있어서 따로 import를 하지 않아도 됨.


< Object 클래스의 메서드들 >
- toString( ): 객체의 정보를 리턴함.
- equals( ): 객체를 비교할 때 사용함.
- hashCode( ): 객체를 비교하는 아이디를 리턴함.
- clone( ): 객체의 복사본을 리턴함.
- finalize( ): 객체가 소멸할 때 호출되어 사용함.
- getClass( ): 객체의 정보를 담고 있는 Class의 인스턴스를 리턴함.
- notify( ), notifyAll( ), wait( ): Thread에서 사용하는 메서드

# toString( ), equals( ), hashCode( ) 메서드는 자식 클래스에서 오버라이딩하여 사용함.
# 모든 메서드의 접근 제어자는 public으로 선언되어 있음.


< 접근 제어자 (Access Modifier) >
- private: 자신의 클래스 안에서만 사용 가능
- default: 같은 패키지 안에서만 사용 가능, 접근 제어자를 생략한 상태
- protected: 같은 패키지 안에서 사용 가능하고, 패키지가 달라도 상속을 받았다면 사용 가능
- public: 어디에서든지 사용 가능

< 접근 제어자의 범위 >
- public > protected > default > private


< 다형성 (polymorphism) >
- 하나의 방법으로 여러가지를 한꺼번에 처리하는 것.
- 부모 클래스 배열을 만들어 부모 인스턴스와 자식 인스턴스를 담아서 반복문을 통해서
한꺼번에 처리할 수 있도록 하는 것.


###################################################################
추상 클래스
비추상 클래스 - 일반 클래스


< 추상 메서드 (abstract method) >
- 현시점에서는 구체적인 기능을 정의하기 어려운 메서드일 때 사용.
- 방법:  구현부를 없애고 메서드명 앞에 abstract를 붙여서 정의.


< 추상 클래스 (abstract Class)  >
1. 추상 메서드를 하나라도 가지면 반드시 추상클래스가 되어야 한다.
2. 추상 메서드가 없어도 추상클래스는 될 수 있다.
3. 추상 클래스가 되면 인스턴스를 생성할 수 없다. -> ●상속 관계를 위한 목적이 더 뚜렷해짐(부모로만 있겠다)
4. 자식 클래스로 상속받게 하고, 자신의 배열을 통해서 다형성을 구현할 목적으로 사용된다.
5. 추상 클래스로부터 상속을 받는다면, 자식 클래스에서는 부모의 추상 메서드를 반드시 오버라이딩 해야 한다.
6. 만약 자식 클래스에서 부모의 추상 메서드를 오버라이딩 하지 않는다면, 자식 클래스도 추상 클래스가 되어야 한다.

